#!/bin/sh

set -e

while [ "$(ceph orch device ls | grep No | { grep -v grep || test $? = 1; } | wc -l)" = "0" ]; do
  sleep 10
done

while [ "$(ceph orch device ls | grep Yes | { grep -v grep || test $? = 1; } | wc -l)" != "0" ]; do
  sleep 10
done

#Control pool
ceph osd pool create default.rgw.control 32 32 replicated replicated_rule
ceph osd pool set default.rgw.control size 3
ceph osd pool set default.rgw.control min_size 2
ceph osd pool application enable default.rgw.control rgw

#Meta pool
ceph osd pool create default.rgw.meta 32 32 replicated replicated_rule
ceph osd pool set default.rgw.meta size 3
ceph osd pool set default.rgw.meta min_size 2
ceph osd pool application enable default.rgw.meta rgw

#Log pool
ceph osd pool create default.rgw.log 32 32 replicated replicated_rule
ceph osd pool set default.rgw.log size 3
ceph osd pool set default.rgw.log min_size 2
ceph osd pool application enable default.rgw.log rgw

#Otp pool
ceph osd pool create default.rgw.otp 32 32 replicated replicated_rule
ceph osd pool set default.rgw.otp size 3
ceph osd pool set default.rgw.otp min_size 2
ceph osd pool application enable default.rgw.otp rgw

#Default placement group index pool
ceph osd pool create default.rgw.buckets.index 64 64 replicated replicated_rule
ceph osd pool set default.rgw.buckets.index size 3
ceph osd pool set default.rgw.buckets.index min_size 2
ceph osd pool application enable default.rgw.buckets.index rgw

#Default placement group extra data pool
ceph osd pool create default.rgw.buckets.non-ec 64 64 replicated replicated_rule
ceph osd pool set default.rgw.buckets.non-ec size 3
ceph osd pool set default.rgw.buckets.non-ec min_size 2
ceph osd pool application enable default.rgw.buckets.non-ec rgw

#Default placement group standard storage class
ceph osd erasure-code-profile set default-ec k={{ default_erasure_code_k }} m={{ default_erasure_code_m }} crush-failure-domain=host
ceph osd pool create default.rgw.buckets.data 128 128 erasure default-ec
ceph osd pool set default.rgw.buckets.data min_size {{ default_erasure_code_k + 1 }}
ceph osd pool application enable default.rgw.buckets.data rgw

#Deploy gateways
ceph orch apply -i /opt/rgw_services.yml

while [ -z "$(ceph orch ls | grep rgw.default | { grep -v grep || test $? = 1; })" ]; do
  sleep 10
done

while [ ! -z "$(ceph orch ls | grep rgw.default | grep "0/" | { grep -v grep || test $? = 1; })" ]; do
  sleep 10
done

{% if default_compression_algorithm is defined and default_compression_algorithm|length %}
radosgw-admin zone placement modify \
      --rgw-zonegroup default \
      --rgw-zone default \
      --placement-id default-placement \
      --storage-class STANDARD \
      --compression {{ default_compression_algorithm }}
{% endif %}